// Code generated by Microsoft (R) AutoRest Code Generator 0.15.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Batch
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Models;

    /// <summary>
    /// Extension methods for Subscription.
    /// </summary>
    public static partial class SubscriptionExtensions
    {
            /// <summary>
            /// The Get Subscription Quotas operation returns the quotas of the
            /// subscription in the Batch service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='locationName'>
            /// The desired region for the quota.
            /// </param>
            public static SubscriptionQuotasGetResult GetSubscriptionQuotas(this ISubscription operations, string locationName)
            {
                return Task.Factory.StartNew(s => ((ISubscription)s).GetSubscriptionQuotasAsync(locationName), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// The Get Subscription Quotas operation returns the quotas of the
            /// subscription in the Batch service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='locationName'>
            /// The desired region for the quota.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SubscriptionQuotasGetResult> GetSubscriptionQuotasAsync(this ISubscription operations, string locationName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetSubscriptionQuotasWithHttpMessagesAsync(locationName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
